======================================================================
  RTComponent: HOTMOCK_master specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  @author 土屋彩茜
   ma14076@shibaura-it.ac.jp

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=HOTMOCK_master 
#   --module-desc='Connect HOTMOCK devices with RTC' --module-version=1.2.0 --module-vendor=Ayaka Tsuchiya 
#   --module-category=tool --module-comp-type=COMMUTATIVE 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --config=SettingFilename:string:*.hmst --config=IPAddress:string:127.0.0.1 --config=PortNumber:int:8888 --config=GetDataType:std::vector<int>:0,0,0,0 
#   --inport=DO:RTC::TimedShort --inport=AO:RTC::TimedDouble --inport=Reset_PI:RTC::TimedBoolean --outport=DI:RTC::TimedShort --outport=AI:RTC::TimedDouble --outport=PI:RTC::TimedDouble --outport=TS:RTC::TimedDouble --outport=GS:RTC::TimedDoubleSeq 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: HOTMOCK_master
Description: Connect HOTMOCK devices with RTC
Version:     1.2.0
Vendor:      Ayaka Tsuchiya
Category:    tool
Kind:        DataFlowComponent
Comp. Type:  COMMUTATIVE
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

Overview:    HOTMOCKSettingとソケット通信を行い、HOTMOCKデバイスを
             使用するためのコンポーネント。
             初期化時にデバイス設定ファイルを読み込み、ポートが生成
             される。
In/Out:      InPort:<name>/<datatype>/<documentation>
             DO/TimedShort/
             HOTMOCKデバイスのDO*に送信するデジタル出力値を取得する
             ポート
             AO/TimedDouble/
             HOTMOCKデバイスのAO*に送信するアナログ出力値を取得する
             ポート
             Reset_PI/
             TimedBoolean/HOTMOCKデバイスのPI*につながっているパル
             ス入力の積算値をリセットするためのフラグを取得するポー
             ト
             OutPort:<name>/<datatype>/<documentation>
             DI/TimedShort/
             HOTMOCKデバイスのDI*から受信したデジタル入力値を送るポ
             ート。
             AI/TimedDouble/
             HOTMOCKデバイスのAI*から受信したアナログ入力値を送るポ
             ート。
             PI/TimedDouble/
             HOTMOCKデバイスのPI*から受信したパルス入力値を送るポー
             ト。
             TS/TimedDouble/HOTMOCKデバイス内蔵の温度センサから受信
             した値を送るポート。
             GS/TimedDoubleSeq/HOTMOCKデバイス内蔵の加速度センサか
             ら受信した値を送るポート。値は要素数0から順にx,y,zの配
             列として送られる。
             Configuration:<name>/<datatype>/<default>
             /<widget>/<documentation>
             SettingFilename/string/*.hmst/text/HOTMOCKSettingによ
             って作成されたHOTMOCKデバイスの設定ファイル名。
             IPAddress/string/127.0.0.1/text/HOTMOCKSettingのIPアド
             レス。
             PortNumber/int/8888/text/HOTMOCKSettingのPort番号。
             GetDataType/std::vector<int>/0,0,0,0/ordered_list/HOT
             MOCKデバイスからの入力を取得する際、0ならば生値を取得
             、1ならば工業変換値を取得する。配列0から順にAI,PI,
             TS,GSの設定をする。
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented
	Description:   DynamicPortのRTCへの登録を行う。

[on_finalize]      implemented
	Description:   DynamicPortの削除を行う。

[on_startup]

[on_shutdown]

[on_activated]     implemented
	Description:   HOTMOCKデバイスの設定ファイルを読み込み、データポ
	               ートの生成・削除を行う。その後ソケット通信を開始す
	               る。
	PreCondition:  HOTMOCKSettingが起動・シュミレーションモードになっ
	               ていること。
	PostCondition: HOTMOCKSettingが通信中になっていること。

[on_deactivated]   implemented
	Description:   ソケット通信を終了する。

[on_execute]       implemented
	Description:   ソケット通信によりHOTMOCKデバイスとデータのやり取
	               りを行う。

[on_aborting]

[on_error]

[on_reset]         implemented
	Description:   終了処理を行う。

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        DO
	PortNumber:  0
	Description: HOTMOCKデバイスのDO*に送信するデジタル出力値を取得す
	             るポート。
	PortType: 
	DataType:    RTC::TimedShort
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShort
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        AO
	PortNumber:  1
	Description: HOTMOCKデバイスのAO*に送信するアナログ出力値を取得す
	             るポート。
	PortType: 
	DataType:    RTC::TimedDouble
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedDouble
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        Reset_PI
	PortNumber:  2
	Description: HOTMOCKデバイスのPI01につながっているパルス入力の積
	             算値をリセットするためのフラグを取得するポート。
	PortType: 
	DataType:    RTC::TimedBoolean
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedBoolean
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        DI
	PortNumber:  0
	Description: HOTMOCKデバイスのDI*から受信したデジタル入力値を送る
	             ポート。
	PortType: 
	DataType:    RTC::TimedShort
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShort
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        AI
	PortNumber:  1
	Description: HOTMOCKデバイスのAI*から受信したアナログ入力値を送る
	             ポート。
	PortType: 
	DataType:    RTC::TimedDouble
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedDouble
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        PI
	PortNumber:  2
	Description: HOTMOCKデバイスのPI*から受信したパルス入力値を送るポ
	             ート。
	PortType: 
	DataType:    RTC::TimedDouble
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedDouble
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        TS
	PortNumber:  3
	Description: HOTMOCKデバイス内蔵の温度センサから受信した値を送る
	             ポート。
	PortType: 
	DataType:    RTC::TimedDouble
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedDouble
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        GS
	PortNumber:  4
	Description: HOTMOCKデバイス内蔵の加速度センサから受信した値を送
	             るポート。
	             値は要素数0から順にx,y,zの配列として送られる。
	PortType: 
	DataType:    RTC::TimedDoubleSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedDoubleSeq
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:            SettingFilename SettingFilename
		Description:     HOTMOCKSettingによって作成されたHOTMOCKデバイ
		                 スの設定ファイル名。
		Type:            string
		DefaultValue:    *.hmst *.hmst
		Unit:            
		Range:           
		Constraint:      

		Name:            IPAddress IPAddress
		Description:     HOTMOCKSettingのIPアドレス。
		Type:            string
		DefaultValue:    localhost 127.0.0.1
		Unit:            
		Range:           
		Constraint:      

		Name:            PortNumber PortNumber
		Description:     HOTMOCKSettingのPort番号。
		Type:            int
		DefaultValue:    8888 8888
		Unit:            
		Range:           
		Constraint:      

		Name:            GetDataType GetDataType
		Description:     HOTMOCKデバイスからの入力を取得する際、
		                 0ならば生値を取得、1ならば工業変換値を取得する
		                 。
		                 配列0から順にAI,PI,TS,GSの設定をする。
		Type:            std::vector<int>
		DefaultValue:    0,0,0,0 0,0,0,0
		Unit:            
		Range:           
		Constraint:      

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

