======================================================================
  RTComponent: Thresholding specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  @author 土屋彩茜
   ma14076@shibaura-it.ac.jp

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=Thresholding 
#   --module-desc='Send Command by Thresholding the Configuration' --module-version=1.0.0 --module-vendor=Ayaka Tsuchiya 
#   --module-category=tool --module-comp-type=COMMUTATIVE 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --config=Threshold:double:50.0 --config=Threshold_Mode:int:0 --config=OutDataValue:std::vector<short>:0,0,1 
#   --inport=DoubleInData:RTC::TimedDouble --inport=ShortInData:RTC::TimedShort --inport=DoubleThreshold:RTC::TimedDouble --inport=ShortThreshold:RTC::TimedShort --outport=OutData:RTC::TimedShort 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: Thresholding
Description: Send Command by Thresholding the Configuration
Version:     1.0.0
Vendor:      Ayaka Tsuchiya
Category:    tool
Kind:        DataFlowComponent
Comp. Type:  COMMUTATIVE
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

Overview:    入力された値と閾値を比較して、二値化した値を出力するコ
             ンポーネント。
             閾値と出力する値はConfigurationで設定する。
             設定された値が不適切な場合はエラーになる。
In/Out:      InPort:<name>/<datatype>/<documentation>
             DoubleInData/TimedDouble/double型のデータを入力するポ
             ート。
             ShortInData/TimedShort/short型のデータを入力するポート
             。
             DoubleThreshold/TimedDouble/閾値となるdouble型を入力す
             るポート。
             ShortThreshold/TimedShort/閾値となるshort型を入力する
             ポート。
             OutPort:<name>/<datatype>/<documentation>
             OutData/TimedShort/二値化された値を出力するポート。
             Configuration:<name>/<datatype>/<default>
             /<widget>/<documentation>
             Threshold/double/50.0/text/閾値。
             Threshold_Mode/int/0/radio/どの閾値を使用するか選択す
             る。0ならばConfiguration：Threshold、1ならばInPort：D
             oubleInData、2ならばInPort：ShortInDataが閾値として用
             いられる。
             OutDataValue/std::vector<short>/0,0,1/出力する値。値は
             要素数0から順に閾値より小さい、閾値と等しい、閾値より
             大きいとなる。
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]     implemented
	Description:   ポートを初期化する。

[on_deactivated]   implemented

[on_execute]       implemented
	Description:   入力された値と閾値を比較して、二値化した値を出力す
	               る。

[on_aborting]

[on_error]

[on_reset]

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        DoubleInData
	PortNumber:  0
	Description: double型のデータを入力するポート。
	PortType: 
	DataType:    RTC::TimedDouble
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedDouble
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        ShortInData
	PortNumber:  1
	Description: short型のデータを入力するポート。
	PortType: 
	DataType:    RTC::TimedShort
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShort
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        DoubleThreshold
	PortNumber:  2
	Description: 閾値となるdouble型を入力するポート。
	PortType: 
	DataType:    RTC::TimedDouble
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedDouble
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        ShortThreshold
	PortNumber:  3
	Description: 閾値となるshort型を入力するポート。
	PortType: 
	DataType:    RTC::TimedShort
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShort
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        OutData
	PortNumber:  0
	Description: 二値化された値を出力するポート。
	PortType: 
	DataType:    RTC::TimedShort
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShort
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:            Threshold Threshold
		Description:     閾値。
		Type:            double
		DefaultValue:    50.0 50.0
		Unit:            
		Range:           
		Constraint:      

		Name:            Threshold_Mode Threshold_Mode
		Description:     どの閾値を使用するか選択する。
		                 0ならばConfiguration：Threshold、1ならばInPor
		                 t：DoubleInData、2ならばInPort：ShortInData
		                 が閾値として用いられる。
		Type:            int
		DefaultValue:    0 0
		Unit:            
		Range:           
		Constraint:      (0,1,2)

		Name:            OutDataValue OutDataValue
		Description:     出力する値。
		                 値は要素数0から順に閾値より小さい、閾値と等し
		                 い、閾値より大きいとなる。
		Type:            std::vector<short>
		DefaultValue:    0,0,1 0,0,1
		Unit:            
		Range:           
		Constraint:      

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

